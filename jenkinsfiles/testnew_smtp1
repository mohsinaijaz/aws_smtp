#!/usr/bin/env groovy

pipeline {
    agent any
    environment {
        AWS_ACCESS_KEY = credentials('JenkinsUser')

        AWS_DEFAULT_REGION = 'us-east-1'
        AWS_ACCESS_KEY_ID = "${AWS_ACCESS_KEY_USR}"
        AWS_SECRET_ACCESS_KEY = "${AWS_ACCESS_KEY_PSW}"
    }
    stages {
        stage('Test New SMTP') {
            steps {
              script {
                    dir('test-instance') {
                      withCredentials([sshUserPrivateKey(credentialsId: 'goldkey', keyFileVariable: 'sshkey', passphraseVariable: 'sshpassphrase', usernameVariable: 'sshusername')]) {
                      sh """
                      SMTP_IP=\$(/usr/local/bin/aws ec2 describe-instances --instance-ids $New_SMPT \
                      --query 'Reservations[*].Instances[*].PublicIpAddress' --output text)
                      ssh -tt -o StrictHostKeyChecking=no -i $sshkey $sshusername@\$SMTP_IP '
                      echo “Testing 123” | mailx -v -s “Test Email” -r “test@aws.cms.gov”  “aijaz_mohsin@bah.com”
                      sleep 30;
                      STATUS=1
                      for i in {1..100}; do
                      if [ ! -z "\$(mailq | grep 'MAILER')" ]
                      then
                          echo "queue not empty trying again"
                          echo "Retrying..."; sleep 15;
                      else
                          echo "queue empty"
                          STATUS=0
                          break;
                      fi
                      done
                      exit \$STATUS'
                      echo \$?
                      """
                   }
                }
             }
          }
       }
        stage('Attach to ELB') {
            steps {
              script {
                    dir('test-instance') {
                      sh """
                      set -e +x
                      ELB=\$(/usr/local/bin/aws elb register-instances-with-load-balancer \
                      --load-balancer-name $SMTP_ELB --instances $New_SMPT)
                      """
                   }
                }
            }
        }//stage
    } //stages
} //pipeline
