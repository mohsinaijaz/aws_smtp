#!/usr/bin/env groovy

pipeline {
    agent any
    environment {
        AWS_ACCESS_KEY = credentials('JenkinsUser')
        //GOLD_AWS = credentials('goldkey')

        AWS_DEFAULT_REGION = 'us-east-1'
        AWS_ACCESS_KEY_ID = "${AWS_ACCESS_KEY_USR}"
        AWS_SECRET_ACCESS_KEY = "${AWS_ACCESS_KEY_PSW}"
    }
    stages {
      stage("Retrieve SMTP's IP Address") {
          steps {
            script {
                dir('test-instance') {
                    sh """
                    set -e +x
                    SMTP_IP=\$(/usr/local/bin/aws ec2 describe-instances --instance-ids $OLD_SMTP_1 \
                    --query 'Reservations[*].Instances[*].PublicIpAddress' --output text);
                    echo \$SMTP_IP
                    """
              }
          }
      }
  }
      stage("Removing from ELB") {
          steps {
            script {
                dir('test-instance') {
                    sh """
                    set -e +x
                    echo "Removing \$SMPT_IP from ELB"
                    /usr/local/bin/aws elb deregister-instances-from-load-balancer \
                    --load-balancer-name \$SMTP_ELB --instances \$OLD_SMTP_1;
                    echo \$SMTP_ELB
                    echo \$OLD_SMTP_1
                    """
              }
          }
      }
  }
        stage('Decommission Old SMTP Server') {
          steps {
              script {
                  retry(1){
                      withCredentials([sshUserPrivateKey(credentialsId: 'goldkey', keyFileVariable: 'sshkey', passphraseVariable: 'sshpassphrase', usernameVariable: 'sshusername')]) {
                          sh """
                          set -e +x
                          echo "Checking mailq"
                          ssh -tt -o StrictHostKeyChecking=no -i $sshkey $sshusername@54.86.47.243 "sudo date"
                          """
                      }
                  }
              }
           }
        }
    }
}
